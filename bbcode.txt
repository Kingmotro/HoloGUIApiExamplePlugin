[CENTER][SIZE=5]
[IMG]http://i.imgur.com/W537C1e.gif[/IMG]
HoloGUIApi contains the core functionality that drives HoloGUI. This API makes it easy to create immersive and unique player experiences when interacting with your plugin.[/SIZE]



[SIZE=7][COLOR=#ff4d4d][B]Please reference HoloGUIApiExamplePlugin to show how the API is used.[/B][/COLOR][/SIZE]
[/CENTER]
[SIZE=5]Plugins using HoloGUIAPI:[/SIZE]
[LIST]
[*][SIZE=5]Example HoloGUIAPi Plugin (Stopwatch)[/SIZE]
[*][SIZE=5]StaffTimesheet[/SIZE]
[/LIST]

[SIZE=7]Getting Started With HoloGUIApi...
[/SIZE]
[SIZE=6][U]Project Setup[/U]:
The Api will look for resources required to run your plugin in a folder called 'resources' at the root level of the .jar file. The /resources directory contains two more directories 'images/' and 'yamls/' where images and yaml gui page config file are stored respectively.

See image for a more clear description of the required .jar filestructure[/SIZE]
[CENTER][SIZE=6][IMG]http://i.imgur.com/ES0YpDM.png[/IMG] [/SIZE][/CENTER]
[SIZE=6]
I would also recommend opening the HoloGUIApiExamplePlugin with a program like WinRar to see how the resource file structure is laid out.

For maven users paste this code into your pom.xml and maven will set up the resource file structure for the .jar:
[SPOILER="Maven pom.xml resource file structure config"]
[CODE]<resources>
      <resource>
        <directory>resources</directory>
        <includes>
          <include>plugin.yml</include>
          <include>config.yml</include>
        </includes>
      </resource>
      <resource>
          <directory>resources/images</directory>
          <includes>
            <include>*</include>
        </includes>
        <targetPath>${project.build.outputDirectory}\resources\images</targetPath>
      </resource>
      <resource>
          <directory>resources/yamls</directory>
          <includes>
              <include>*</include>
          </includes>
          <targetPath>${project.build.outputDirectory}\resources\yamls</targetPath>
      </resource>
    </resources>[/CODE]
[/SPOILER][/SIZE]

[U][SIZE=6]Your Plugin's Main Class:[/SIZE][/U]
[SIZE=6]
[CODE]public class ExamplePlugin extends HoloGUIPlugin //extend your plugin class with HoloGUIPlugin
{
    @Override
    public void onEnable()
    {
        saveDefaultConfig();//save default config.yml
        getHoloGUIApi().hookHoloGUIPlugin(this);//hook the plugin into HoloGUIApi
        loadGUIPages();//load the GUI Pages from cofig

        getCommand("stopwatch").setExecutor(new CommandEvent(this));
    }

    @Override
    public void onDisable()
    {
        //destorys all gui pages displayed through this plugin that players may have been looking at when the plugin got disabled
        getHoloGUIApi().destroyGUIPages(this);
    }
}[/CODE]
[/SIZE]